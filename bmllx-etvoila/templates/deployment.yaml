apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bmllx-etvoila.fullname" . }}
  labels:
{{ include "bmllx-etvoila.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "bmllx-etvoila.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "bmllx-etvoila.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
    {{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: BMLLX_SANDBOX_AND_CACHING_ENABLED
              value: "false"
          {{- if .Values.env }}
          {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: "{{ $val }}"
          {{- end }}
          {{- end }}
          {{- if .Values.inject_bmll_key }}
            - name: BMLL_KEY
              valueFrom:
                secretKeyRef:
                  name: bmll-key
                  key: bmll_key
          {{- end }}
            - name: BMLLX_NOTEBOOK_AREA
              value: {{ .Values.notebook.area }}
            - name: BMLLX_NOTEBOOK_FILE
              value: {{ .Values.notebook.file }}
          envFrom:
          {{- range $configmap := .Values.envConfigMaps }}
              - configMapRef:
                  name: {{ $configmap }}
          {{- end }}
          {{- range $secretref := .Values.envSecretRefs }}
              - secretRef:
                  name: {{ $secretref }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8866
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#            initialDelaySeconds: 120
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
#            initialDelaySeconds: 90
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
